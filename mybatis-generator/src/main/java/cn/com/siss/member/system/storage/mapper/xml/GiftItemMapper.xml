<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.siss.member.system.storage.mapper.GiftItemMapper" >
  <resultMap id="BaseResultMap" type="cn.com.siss.member.system.api.domain.GiftItem" >
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="gift_category" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="item_type" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="item_no" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="item_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="item_stock" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="limit_stock" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="cash_branch" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="need_scored" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="need_cash" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="start_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="end_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="created_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="created_by" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="updated_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="updated_by" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="remark" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="deleted" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, gift_category, item_type, item_no, item_name, item_stock, limit_stock, cash_branch, 
    need_scored, need_cash, start_time, end_time, created_time, created_by, updated_time, 
    updated_by, remark, deleted
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.siss.member.system.api.domain.GiftItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from gift_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from gift_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from gift_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.siss.member.system.api.domain.GiftItemExample" >
    delete from gift_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.siss.member.system.api.domain.GiftItem" >
    insert into gift_item (id, gift_category, item_type, 
      item_no, item_name, item_stock, 
      limit_stock, cash_branch, need_scored, 
      need_cash, start_time, end_time, 
      created_time, created_by, updated_time, 
      updated_by, remark, deleted
      )
    values (#{id,jdbcType=BIGINT}, #{giftCategory,jdbcType=INTEGER}, #{itemType,jdbcType=INTEGER}, 
      #{itemNo,jdbcType=VARCHAR}, #{itemName,jdbcType=VARCHAR}, #{itemStock,jdbcType=INTEGER}, 
      #{limitStock,jdbcType=INTEGER}, #{cashBranch,jdbcType=VARCHAR}, #{needScored,jdbcType=INTEGER}, 
      #{needCash,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{updatedBy,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{deleted,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.siss.member.system.api.domain.GiftItem" >
    insert into gift_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="giftCategory != null" >
        gift_category,
      </if>
      <if test="itemType != null" >
        item_type,
      </if>
      <if test="itemNo != null" >
        item_no,
      </if>
      <if test="itemName != null" >
        item_name,
      </if>
      <if test="itemStock != null" >
        item_stock,
      </if>
      <if test="limitStock != null" >
        limit_stock,
      </if>
      <if test="cashBranch != null" >
        cash_branch,
      </if>
      <if test="needScored != null" >
        need_scored,
      </if>
      <if test="needCash != null" >
        need_cash,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="updatedTime != null" >
        updated_time,
      </if>
      <if test="updatedBy != null" >
        updated_by,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="giftCategory != null" >
        #{giftCategory,jdbcType=INTEGER},
      </if>
      <if test="itemType != null" >
        #{itemType,jdbcType=INTEGER},
      </if>
      <if test="itemNo != null" >
        #{itemNo,jdbcType=VARCHAR},
      </if>
      <if test="itemName != null" >
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="itemStock != null" >
        #{itemStock,jdbcType=INTEGER},
      </if>
      <if test="limitStock != null" >
        #{limitStock,jdbcType=INTEGER},
      </if>
      <if test="cashBranch != null" >
        #{cashBranch,jdbcType=VARCHAR},
      </if>
      <if test="needScored != null" >
        #{needScored,jdbcType=INTEGER},
      </if>
      <if test="needCash != null" >
        #{needCash,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.siss.member.system.api.domain.GiftItemExample" resultType="java.lang.Integer" >
    select count(*) from gift_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update gift_item
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.giftCategory != null" >
        gift_category = #{record.giftCategory,jdbcType=INTEGER},
      </if>
      <if test="record.itemType != null" >
        item_type = #{record.itemType,jdbcType=INTEGER},
      </if>
      <if test="record.itemNo != null" >
        item_no = #{record.itemNo,jdbcType=VARCHAR},
      </if>
      <if test="record.itemName != null" >
        item_name = #{record.itemName,jdbcType=VARCHAR},
      </if>
      <if test="record.itemStock != null" >
        item_stock = #{record.itemStock,jdbcType=INTEGER},
      </if>
      <if test="record.limitStock != null" >
        limit_stock = #{record.limitStock,jdbcType=INTEGER},
      </if>
      <if test="record.cashBranch != null" >
        cash_branch = #{record.cashBranch,jdbcType=VARCHAR},
      </if>
      <if test="record.needScored != null" >
        need_scored = #{record.needScored,jdbcType=INTEGER},
      </if>
      <if test="record.needCash != null" >
        need_cash = #{record.needCash,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null" >
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedTime != null" >
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null" >
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.deleted != null" >
        deleted = #{record.deleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update gift_item
    set id = #{record.id,jdbcType=BIGINT},
      gift_category = #{record.giftCategory,jdbcType=INTEGER},
      item_type = #{record.itemType,jdbcType=INTEGER},
      item_no = #{record.itemNo,jdbcType=VARCHAR},
      item_name = #{record.itemName,jdbcType=VARCHAR},
      item_stock = #{record.itemStock,jdbcType=INTEGER},
      limit_stock = #{record.limitStock,jdbcType=INTEGER},
      cash_branch = #{record.cashBranch,jdbcType=VARCHAR},
      need_scored = #{record.needScored,jdbcType=INTEGER},
      need_cash = #{record.needCash,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      deleted = #{record.deleted,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.siss.member.system.api.domain.GiftItem" >
    update gift_item
    <set >
      <if test="giftCategory != null" >
        gift_category = #{giftCategory,jdbcType=INTEGER},
      </if>
      <if test="itemType != null" >
        item_type = #{itemType,jdbcType=INTEGER},
      </if>
      <if test="itemNo != null" >
        item_no = #{itemNo,jdbcType=VARCHAR},
      </if>
      <if test="itemName != null" >
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="itemStock != null" >
        item_stock = #{itemStock,jdbcType=INTEGER},
      </if>
      <if test="limitStock != null" >
        limit_stock = #{limitStock,jdbcType=INTEGER},
      </if>
      <if test="cashBranch != null" >
        cash_branch = #{cashBranch,jdbcType=VARCHAR},
      </if>
      <if test="needScored != null" >
        need_scored = #{needScored,jdbcType=INTEGER},
      </if>
      <if test="needCash != null" >
        need_cash = #{needCash,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.siss.member.system.api.domain.GiftItem" >
    update gift_item
    set gift_category = #{giftCategory,jdbcType=INTEGER},
      item_type = #{itemType,jdbcType=INTEGER},
      item_no = #{itemNo,jdbcType=VARCHAR},
      item_name = #{itemName,jdbcType=VARCHAR},
      item_stock = #{itemStock,jdbcType=INTEGER},
      limit_stock = #{limitStock,jdbcType=INTEGER},
      cash_branch = #{cashBranch,jdbcType=VARCHAR},
      need_scored = #{needScored,jdbcType=INTEGER},
      need_cash = #{needCash,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>