<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.siss.member.user.storage.mapper.MemberCardMapper" >
  <resultMap id="BaseResultMap" type="cn.com.siss.member.user.api.domain.MemberCard" >
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="merchant_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="branch_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="branch_no" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="branch_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="level_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="level_no" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="level_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="member_no" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="member_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="card_prefix" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="card_mid" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="card_suffix" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="scored_start_date" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="scored_end_date" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="finance_start_date" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="finance_end_date" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="pay_way" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="init_score" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="init_amount" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="limit_quantity" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="created_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="created_by" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="updated_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="updated_by" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="remark" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="deleted" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, merchant_id, branch_id, branch_no, branch_name, level_id, level_no, level_name, 
    member_no, member_name, card_prefix, card_mid, card_suffix, scored_start_date, scored_end_date, 
    finance_start_date, finance_end_date, pay_way, init_score, init_amount, limit_quantity, 
    password, created_time, created_by, updated_time, updated_by, remark, deleted
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.siss.member.user.api.domain.MemberCardExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member_card
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from member_card
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from member_card
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.siss.member.user.api.domain.MemberCardExample" >
    delete from member_card
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.siss.member.user.api.domain.MemberCard" >
    insert into member_card (id, merchant_id, branch_id, 
      branch_no, branch_name, level_id, 
      level_no, level_name, member_no, 
      member_name, card_prefix, card_mid, 
      card_suffix, scored_start_date, scored_end_date, 
      finance_start_date, finance_end_date, pay_way, 
      init_score, init_amount, limit_quantity, 
      password, created_time, created_by, 
      updated_time, updated_by, remark, 
      deleted)
    values (#{id,jdbcType=BIGINT}, #{merchantId,jdbcType=BIGINT}, #{branchId,jdbcType=BIGINT}, 
      #{branchNo,jdbcType=VARCHAR}, #{branchName,jdbcType=VARCHAR}, #{levelId,jdbcType=BIGINT}, 
      #{levelNo,jdbcType=VARCHAR}, #{levelName,jdbcType=VARCHAR}, #{memberNo,jdbcType=VARCHAR}, 
      #{memberName,jdbcType=VARCHAR}, #{cardPrefix,jdbcType=VARCHAR}, #{cardMid,jdbcType=BIGINT}, 
      #{cardSuffix,jdbcType=VARCHAR}, #{scoredStartDate,jdbcType=DATE}, #{scoredEndDate,jdbcType=DATE}, 
      #{financeStartDate,jdbcType=DATE}, #{financeEndDate,jdbcType=DATE}, #{payWay,jdbcType=VARCHAR}, 
      #{initScore,jdbcType=DECIMAL}, #{initAmount,jdbcType=INTEGER}, #{limitQuantity,jdbcType=INTEGER}, 
      #{password,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR}, 
      #{updatedTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{deleted,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.siss.member.user.api.domain.MemberCard" >
    insert into member_card
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="merchantId != null" >
        merchant_id,
      </if>
      <if test="branchId != null" >
        branch_id,
      </if>
      <if test="branchNo != null" >
        branch_no,
      </if>
      <if test="branchName != null" >
        branch_name,
      </if>
      <if test="levelId != null" >
        level_id,
      </if>
      <if test="levelNo != null" >
        level_no,
      </if>
      <if test="levelName != null" >
        level_name,
      </if>
      <if test="memberNo != null" >
        member_no,
      </if>
      <if test="memberName != null" >
        member_name,
      </if>
      <if test="cardPrefix != null" >
        card_prefix,
      </if>
      <if test="cardMid != null" >
        card_mid,
      </if>
      <if test="cardSuffix != null" >
        card_suffix,
      </if>
      <if test="scoredStartDate != null" >
        scored_start_date,
      </if>
      <if test="scoredEndDate != null" >
        scored_end_date,
      </if>
      <if test="financeStartDate != null" >
        finance_start_date,
      </if>
      <if test="financeEndDate != null" >
        finance_end_date,
      </if>
      <if test="payWay != null" >
        pay_way,
      </if>
      <if test="initScore != null" >
        init_score,
      </if>
      <if test="initAmount != null" >
        init_amount,
      </if>
      <if test="limitQuantity != null" >
        limit_quantity,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="updatedTime != null" >
        updated_time,
      </if>
      <if test="updatedBy != null" >
        updated_by,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="merchantId != null" >
        #{merchantId,jdbcType=BIGINT},
      </if>
      <if test="branchId != null" >
        #{branchId,jdbcType=BIGINT},
      </if>
      <if test="branchNo != null" >
        #{branchNo,jdbcType=VARCHAR},
      </if>
      <if test="branchName != null" >
        #{branchName,jdbcType=VARCHAR},
      </if>
      <if test="levelId != null" >
        #{levelId,jdbcType=BIGINT},
      </if>
      <if test="levelNo != null" >
        #{levelNo,jdbcType=VARCHAR},
      </if>
      <if test="levelName != null" >
        #{levelName,jdbcType=VARCHAR},
      </if>
      <if test="memberNo != null" >
        #{memberNo,jdbcType=VARCHAR},
      </if>
      <if test="memberName != null" >
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="cardPrefix != null" >
        #{cardPrefix,jdbcType=VARCHAR},
      </if>
      <if test="cardMid != null" >
        #{cardMid,jdbcType=BIGINT},
      </if>
      <if test="cardSuffix != null" >
        #{cardSuffix,jdbcType=VARCHAR},
      </if>
      <if test="scoredStartDate != null" >
        #{scoredStartDate,jdbcType=DATE},
      </if>
      <if test="scoredEndDate != null" >
        #{scoredEndDate,jdbcType=DATE},
      </if>
      <if test="financeStartDate != null" >
        #{financeStartDate,jdbcType=DATE},
      </if>
      <if test="financeEndDate != null" >
        #{financeEndDate,jdbcType=DATE},
      </if>
      <if test="payWay != null" >
        #{payWay,jdbcType=VARCHAR},
      </if>
      <if test="initScore != null" >
        #{initScore,jdbcType=DECIMAL},
      </if>
      <if test="initAmount != null" >
        #{initAmount,jdbcType=INTEGER},
      </if>
      <if test="limitQuantity != null" >
        #{limitQuantity,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.siss.member.user.api.domain.MemberCardExample" resultType="java.lang.Integer" >
    select count(*) from member_card
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update member_card
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.merchantId != null" >
        merchant_id = #{record.merchantId,jdbcType=BIGINT},
      </if>
      <if test="record.branchId != null" >
        branch_id = #{record.branchId,jdbcType=BIGINT},
      </if>
      <if test="record.branchNo != null" >
        branch_no = #{record.branchNo,jdbcType=VARCHAR},
      </if>
      <if test="record.branchName != null" >
        branch_name = #{record.branchName,jdbcType=VARCHAR},
      </if>
      <if test="record.levelId != null" >
        level_id = #{record.levelId,jdbcType=BIGINT},
      </if>
      <if test="record.levelNo != null" >
        level_no = #{record.levelNo,jdbcType=VARCHAR},
      </if>
      <if test="record.levelName != null" >
        level_name = #{record.levelName,jdbcType=VARCHAR},
      </if>
      <if test="record.memberNo != null" >
        member_no = #{record.memberNo,jdbcType=VARCHAR},
      </if>
      <if test="record.memberName != null" >
        member_name = #{record.memberName,jdbcType=VARCHAR},
      </if>
      <if test="record.cardPrefix != null" >
        card_prefix = #{record.cardPrefix,jdbcType=VARCHAR},
      </if>
      <if test="record.cardMid != null" >
        card_mid = #{record.cardMid,jdbcType=BIGINT},
      </if>
      <if test="record.cardSuffix != null" >
        card_suffix = #{record.cardSuffix,jdbcType=VARCHAR},
      </if>
      <if test="record.scoredStartDate != null" >
        scored_start_date = #{record.scoredStartDate,jdbcType=DATE},
      </if>
      <if test="record.scoredEndDate != null" >
        scored_end_date = #{record.scoredEndDate,jdbcType=DATE},
      </if>
      <if test="record.financeStartDate != null" >
        finance_start_date = #{record.financeStartDate,jdbcType=DATE},
      </if>
      <if test="record.financeEndDate != null" >
        finance_end_date = #{record.financeEndDate,jdbcType=DATE},
      </if>
      <if test="record.payWay != null" >
        pay_way = #{record.payWay,jdbcType=VARCHAR},
      </if>
      <if test="record.initScore != null" >
        init_score = #{record.initScore,jdbcType=DECIMAL},
      </if>
      <if test="record.initAmount != null" >
        init_amount = #{record.initAmount,jdbcType=INTEGER},
      </if>
      <if test="record.limitQuantity != null" >
        limit_quantity = #{record.limitQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null" >
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedTime != null" >
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null" >
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.deleted != null" >
        deleted = #{record.deleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update member_card
    set id = #{record.id,jdbcType=BIGINT},
      merchant_id = #{record.merchantId,jdbcType=BIGINT},
      branch_id = #{record.branchId,jdbcType=BIGINT},
      branch_no = #{record.branchNo,jdbcType=VARCHAR},
      branch_name = #{record.branchName,jdbcType=VARCHAR},
      level_id = #{record.levelId,jdbcType=BIGINT},
      level_no = #{record.levelNo,jdbcType=VARCHAR},
      level_name = #{record.levelName,jdbcType=VARCHAR},
      member_no = #{record.memberNo,jdbcType=VARCHAR},
      member_name = #{record.memberName,jdbcType=VARCHAR},
      card_prefix = #{record.cardPrefix,jdbcType=VARCHAR},
      card_mid = #{record.cardMid,jdbcType=BIGINT},
      card_suffix = #{record.cardSuffix,jdbcType=VARCHAR},
      scored_start_date = #{record.scoredStartDate,jdbcType=DATE},
      scored_end_date = #{record.scoredEndDate,jdbcType=DATE},
      finance_start_date = #{record.financeStartDate,jdbcType=DATE},
      finance_end_date = #{record.financeEndDate,jdbcType=DATE},
      pay_way = #{record.payWay,jdbcType=VARCHAR},
      init_score = #{record.initScore,jdbcType=DECIMAL},
      init_amount = #{record.initAmount,jdbcType=INTEGER},
      limit_quantity = #{record.limitQuantity,jdbcType=INTEGER},
      password = #{record.password,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      deleted = #{record.deleted,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.siss.member.user.api.domain.MemberCard" >
    update member_card
    <set >
      <if test="merchantId != null" >
        merchant_id = #{merchantId,jdbcType=BIGINT},
      </if>
      <if test="branchId != null" >
        branch_id = #{branchId,jdbcType=BIGINT},
      </if>
      <if test="branchNo != null" >
        branch_no = #{branchNo,jdbcType=VARCHAR},
      </if>
      <if test="branchName != null" >
        branch_name = #{branchName,jdbcType=VARCHAR},
      </if>
      <if test="levelId != null" >
        level_id = #{levelId,jdbcType=BIGINT},
      </if>
      <if test="levelNo != null" >
        level_no = #{levelNo,jdbcType=VARCHAR},
      </if>
      <if test="levelName != null" >
        level_name = #{levelName,jdbcType=VARCHAR},
      </if>
      <if test="memberNo != null" >
        member_no = #{memberNo,jdbcType=VARCHAR},
      </if>
      <if test="memberName != null" >
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="cardPrefix != null" >
        card_prefix = #{cardPrefix,jdbcType=VARCHAR},
      </if>
      <if test="cardMid != null" >
        card_mid = #{cardMid,jdbcType=BIGINT},
      </if>
      <if test="cardSuffix != null" >
        card_suffix = #{cardSuffix,jdbcType=VARCHAR},
      </if>
      <if test="scoredStartDate != null" >
        scored_start_date = #{scoredStartDate,jdbcType=DATE},
      </if>
      <if test="scoredEndDate != null" >
        scored_end_date = #{scoredEndDate,jdbcType=DATE},
      </if>
      <if test="financeStartDate != null" >
        finance_start_date = #{financeStartDate,jdbcType=DATE},
      </if>
      <if test="financeEndDate != null" >
        finance_end_date = #{financeEndDate,jdbcType=DATE},
      </if>
      <if test="payWay != null" >
        pay_way = #{payWay,jdbcType=VARCHAR},
      </if>
      <if test="initScore != null" >
        init_score = #{initScore,jdbcType=DECIMAL},
      </if>
      <if test="initAmount != null" >
        init_amount = #{initAmount,jdbcType=INTEGER},
      </if>
      <if test="limitQuantity != null" >
        limit_quantity = #{limitQuantity,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.siss.member.user.api.domain.MemberCard" >
    update member_card
    set merchant_id = #{merchantId,jdbcType=BIGINT},
      branch_id = #{branchId,jdbcType=BIGINT},
      branch_no = #{branchNo,jdbcType=VARCHAR},
      branch_name = #{branchName,jdbcType=VARCHAR},
      level_id = #{levelId,jdbcType=BIGINT},
      level_no = #{levelNo,jdbcType=VARCHAR},
      level_name = #{levelName,jdbcType=VARCHAR},
      member_no = #{memberNo,jdbcType=VARCHAR},
      member_name = #{memberName,jdbcType=VARCHAR},
      card_prefix = #{cardPrefix,jdbcType=VARCHAR},
      card_mid = #{cardMid,jdbcType=BIGINT},
      card_suffix = #{cardSuffix,jdbcType=VARCHAR},
      scored_start_date = #{scoredStartDate,jdbcType=DATE},
      scored_end_date = #{scoredEndDate,jdbcType=DATE},
      finance_start_date = #{financeStartDate,jdbcType=DATE},
      finance_end_date = #{financeEndDate,jdbcType=DATE},
      pay_way = #{payWay,jdbcType=VARCHAR},
      init_score = #{initScore,jdbcType=DECIMAL},
      init_amount = #{initAmount,jdbcType=INTEGER},
      limit_quantity = #{limitQuantity,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>